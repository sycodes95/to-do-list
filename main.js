(()=>{let e=[];class t{constructor(e,t,o){this.title=e,this.index=t,this.tasks=[]}}class o{constructor(e,t,o,n){this.title=e,this.description=t,this.priority=o,this.dueDate=n}}function n(){const t=document.querySelector(".projectContainer");let n=document.querySelector(".contentHeader");const l=document.querySelector(".taskContainer");Array.from(t.children).forEach(((t,r)=>{t.addEventListener("click",(()=>{l.innerHTML="",n.textContent=`${e[r].title}`,i(r),function(t){const n=document.querySelector(".taskFormContainer");n.innerHTML="",document.querySelector(".taskContainer");const l=document.createElement("input");l.setAttribute("id","taskTitle"),l.placeholder="title",n.appendChild(l);const r=document.createElement("input");r.setAttribute("id","taskDescription"),r.placeholder="description",n.appendChild(r);const d=document.createElement("select");d.setAttribute("id","taskPriority"),n.appendChild(d);const c=document.createElement("option");c.value="High Priority",c.textContent="High Priority",d.appendChild(c);const a=document.createElement("option");a.value="Low Priority",a.textContent="Low Priority",d.appendChild(a);const s=document.createElement("input");s.setAttribute("id","taskDueDate"),s.type="Date",s.textContent="Due Date",n.appendChild(s);const u=document.createElement("button");u.setAttribute("id","submitTask"),u.textContent="Submit",n.appendChild(u);const p=document.createElement("button");p.setAttribute("id","cancelTask"),p.textContent="Cancel",n.appendChild(p),u.addEventListener("click",(()=>{let n=document.getElementById("taskTitle").value,l=document.getElementById("taskDescription").value,r=document.getElementById("taskPriority").value,d=document.getElementById("taskDueDate").value,c=new o(n,l,r,d);e.at(t).tasks.push(c),console.log(e),console.log(r),i(t),document.querySelector(".taskFormContainer").style.visibility="hidden"}))}(r),function(){const e=document.getElementById("taskButton");e.style.visibility="visible";const t=document.querySelector(".taskFormContainer");e.addEventListener("click",(()=>{t.style.visibility="visible",document.getElementById("taskTitle").value="",document.getElementById("taskDescription").value="",document.getElementById("taskPriority").value="",document.getElementById("taskDueDate").value=""}))}(),console.log(e),console.log(r)}))}))}function i(t){const o=document.querySelector(".taskContainer");o.innerHTML="";let n=e.at(t).tasks;n.forEach(((e,t)=>{let i=document.createElement("div");i.classList.add("task"),o.appendChild(i);let l=document.createElement("input");l.classList.add("taskTitle"),l.value=e.title,i.appendChild(l);let r=document.createElement("input");r.classList.add("taskDescription"),r.value=e.description,i.appendChild(r);let d=document.createElement("select");d.classList.add("taskPriority"),d.textContent=e.priority,i.appendChild(d);let c=document.createElement("option");c.classList.add("lowPriority"),c.value="Low Priority",c.textContent="Low Priority",d.appendChild(c);let a=document.createElement("option");a.classList.add("highPriority"),a.value="High Priority",a.textContent="High Priority",d.appendChild(a);let s=document.createElement("input");s.classList.add("showDueDate"),s.type="Date",s.value=e.dueDate,i.appendChild(s);let u=document.createElement("button");u.classList.add("taskEditAndSubmit"),u.textContent="Submit",i.appendChild(u),u.addEventListener("click",(()=>{e.title=l.value,e.description=r.value,e.priority=d.value,e.dueDate=s.value,"High Priority"==e.priority?i.style.borderColor="red":"Low Priority"==e.priority?i.style.borderColor="green":i.style.borderColor="black",console.log(n)})),"High Priority"==e.priority?i.style.borderColor="red":"Low Priority"==e.priority?i.style.borderColor="green":i.style.borderColor="black";let p=document.createElement("button");p.classList.add("taskDelete"),p.textContent="Delete",i.appendChild(p),p.addEventListener("click",(()=>{n.splice(t,1),i.remove(),console.log(t),console.log(e),console.log(n)}))}))}!function(){const o=document.querySelector(".projectContainer"),i=document.createElement("div");i.textContent="Default",o.appendChild(i);let l=i.textContent,r=new t(l);e.push(r),n(),console.log(e)}(),function(){const e=document.querySelector(".projectFormContainer");document.querySelector(".projectButton").addEventListener("click",(()=>{e.style.visibility="visible"}))}(),function(){const o=document.getElementById("submitProject"),i=document.querySelector(".projectContainer");o.addEventListener("click",(()=>{const o=document.getElementById("projectName"),l=document.createElement("div");i.appendChild(l),l.textContent=o.value;let r=l.textContent,d=new t(r);e.push(d),console.log(e),n(),document.querySelector(".projectFormContainer").style.visibility="hidden"}))}(),document.querySelector(".allTasks").addEventListener("click",(()=>{document.querySelector(".contentHeader").textContent="All";const t=document.querySelector(".taskContainer");t.innerHTML="",e.forEach(((e,o)=>{let n=e.tasks;n.forEach(((e,o)=>{console.log(e);let i=document.createElement("div");i.classList.add("task"),t.appendChild(i);let l=document.createElement("input");l.classList.add("taskTitle"),l.value=e.title,i.appendChild(l);let r=document.createElement("input");r.classList.add("taskDescription"),r.value=e.description,i.appendChild(r);let d=document.createElement("select");d.classList.add("taskPriority"),d.textContent=e.priority,i.appendChild(d);let c=document.createElement("option");c.classList.add("lowPriority"),c.value="Low Priority",c.textContent="Low Priority",d.appendChild(c);let a=document.createElement("option");a.classList.add("highPriority"),a.value="High Priority",a.textContent="High Priority",d.appendChild(a);let s=document.createElement("input");s.classList.add("showDueDate"),s.type="Date",s.value=e.dueDate,i.appendChild(s);let u=document.createElement("button");u.classList.add("taskEditAndSubmit"),u.textContent="Submit",i.appendChild(u),u.addEventListener("click",(()=>{e.title=l.value,e.description=r.value,e.priority=d.value,e.dueDate=s.value,"High Priority"==e.priority?i.style.borderColor="red":"Low Priority"==e.priority?i.style.borderColor="green":i.style.borderColor="black",console.log(n)})),"High Priority"==e.priority?i.style.borderColor="red":"Low Priority"==e.priority?i.style.borderColor="green":i.style.borderColor="black";let p=document.createElement("button");p.classList.add("taskDelete"),p.textContent="Delete",i.appendChild(p),p.addEventListener("click",(()=>{n.splice(o,1),i.remove(),console.log(o),console.log(e),console.log(n)}))}))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWtCaEMsWUFBYyxTQUNoQzZCLEVBQUt0QixZQUFZeUIsR0FFakJBLEVBQWtCbEMsaUJBQWlCLFNBQVMsS0FDeEM4QixFQUFFbEQsTUFBUXlCLEVBQVVRLE1BQ3BCaUIsRUFBRTdDLFlBQWN5QixFQUFnQkcsTUFDaENpQixFQUFFNUMsU0FBV3lCLEVBQWFFLE1BQzFCaUIsRUFBRTNDLFFBQVU0QixFQUFZRixNQUVOLGlCQUFkaUIsRUFBRTVDLFNBQ0Y2QyxFQUFLTixNQUFNVSxZQUFjLE1BQ0osZ0JBQWRMLEVBQUU1QyxTQUNUNkMsRUFBS04sTUFBTVUsWUFBYyxRQUV6QkosRUFBS04sTUFBTVUsWUFBYyxRQUk3QlosUUFBUUMsSUFBSUssRUFBUyxJQU1QLGlCQUFkQyxFQUFFNUMsU0FDRjZDLEVBQUtOLE1BQU1VLFlBQWMsTUFDSixnQkFBZEwsRUFBRTVDLFNBQ1Q2QyxFQUFLTixNQUFNVSxZQUFjLFFBRXpCSixFQUFLTixNQUFNVSxZQUFjLFFBUTdCLElBQUlDLEVBQWE5QyxTQUFTZ0IsY0FBYyxVQUN4QzhCLEVBQVdKLFVBQVVDLElBQUksY0FDekJHLEVBQVdsQyxZQUFjLFNBQ3pCNkIsRUFBS3RCLFlBQVkyQixHQUNqQkEsRUFBV3BDLGlCQUFpQixTQUFTLEtBRWpDNkIsRUFBVVEsT0FBT3RDLEVBQUksR0FDckJnQyxFQUFLTyxTQUNMZixRQUFRQyxJQUFJekIsR0FDWndCLFFBQVFDLElBQUlNLEdBQ1pQLFFBQVFDLElBQUlLLEVBQVMsR0FJeEIsR0FHSixHQUNKLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBteVByb2plY3RzID0gW107XG5cblxuY2xhc3MgUHJvamVjdCB7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIGluZGV4LCB0YXNrcyl7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZVxuICAgICAgICB0aGlzLmluZGV4ID0gaW5kZXhcbiAgICAgICAgdGhpcy50YXNrcyA9IFtdXG4gICAgfVxuXG59XG5cbmNsYXNzIFRhc2sge1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlLCBkZXNjcmlwdGlvbiwgcHJpb3JpdHksIGR1ZURhdGUpe1xuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgICAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgIH1cbn1cblxuKGZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRQcm9qZWN0ICgpeyBcbiAgICBjb25zdCBwcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RDb250YWluZXInKTtcbiAgICBjb25zdCBhZGRQcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYWRkUHJvamVjdC50ZXh0Q29udGVudCA9ICdEZWZhdWx0J1xuICAgIHByb2plY3RDb250YWluZXIuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdCk7XG4gICAgbGV0IHRpdGxlID0gYWRkUHJvamVjdC50ZXh0Q29udGVudDtcbiAgICBsZXQgZGVmYXVsdFByb2plY3QgPSBuZXcgUHJvamVjdCh0aXRsZSk7XG4gICAgbXlQcm9qZWN0cy5wdXNoKGRlZmF1bHRQcm9qZWN0KTtcblxuICAgIHByb2plY3RDbGljaygpXG5cbiAgICBjb25zb2xlLmxvZyhteVByb2plY3RzKVxufSkoKTtcblxuKGZ1bmN0aW9uIHByb2plY3RCdXR0b24gKCl7XG4gICAgY29uc3QgcHJvamVjdEZvcm1Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdEZvcm1Db250YWluZXInKTtcbiAgICBjb25zdCBwcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RCdXR0b24nKTtcbiAgICBcbiAgICBwcm9qZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgICAgcHJvamVjdEZvcm1Db250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcbiAgICB9KTtcbn0pKCk7XG5cbihmdW5jdGlvbiBwcm9qZWN0U3VibWl0ICgpe1xuICAgIGNvbnN0IHN1Ym1pdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXRQcm9qZWN0Jyk7XG4gICAgY29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0Q29udGFpbmVyJyk7XG4gICAgc3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgICAgY29uc3QgcHJvamVjdE5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdE5hbWUnKTtcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBwcm9qZWN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGFkZFByb2plY3QpO1xuXG4gICAgICAgIGFkZFByb2plY3QudGV4dENvbnRlbnQgPSBwcm9qZWN0TmFtZS52YWx1ZTtcbiAgICAgICAgXG4gICAgICAgIGxldCB0aXRsZSA9IGFkZFByb2plY3QudGV4dENvbnRlbnQ7XG5cbiAgICAgICAgbGV0IHByb2plY3RPYmogPSBuZXcgUHJvamVjdCh0aXRsZSlcbiAgICAgICAgbXlQcm9qZWN0cy5wdXNoKHByb2plY3RPYmopXG4gICAgICAgIGNvbnNvbGUubG9nKG15UHJvamVjdHMpXG5cbiAgICAgICAgcHJvamVjdENsaWNrKClcblxuICAgICAgICBjb25zdCBwcm9qZWN0Rm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0Rm9ybUNvbnRhaW5lcicpO1xuICAgICAgICBwcm9qZWN0Rm9ybUNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG5cblxuXG4gICAgfSk7XG59KSgpO1xuXG5mdW5jdGlvbiB0YXNrQnV0dG9uICgpe1xuXG4gICAgXG5cbiAgICBjb25zdCB0YXNrQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tCdXR0b24nKTtcbiAgICB0YXNrQnV0dG9uLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZSdcbiAgICBjb25zdCB0YXNrRm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrRm9ybUNvbnRhaW5lcicpO1xuICAgIFxuICAgIHRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+IHtcbiAgICAgICAgdGFza0Zvcm1Db250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJ1xuXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrVGl0bGUnKS52YWx1ZSA9ICcnO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza0Rlc2NyaXB0aW9uJykudmFsdWUgPSAnJztcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tQcmlvcml0eScpLnZhbHVlID0gJyc7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrRHVlRGF0ZScpLnZhbHVlID0gJyc7XG5cbiAgICB9KVxuXG59XG5cbiAgICAgICAgXG5mdW5jdGlvbiBwcm9qZWN0Q2xpY2sgKCl7XG4gICAgY29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0Q29udGFpbmVyJyk7XG4gICAgbGV0IGNvbnRlbnRIZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudEhlYWRlcicpO1xuICAgIGNvbnN0IHRhc2tDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza0NvbnRhaW5lcicpXG4gICAgQXJyYXkuZnJvbShwcm9qZWN0Q29udGFpbmVyLmNoaWxkcmVuKS5mb3JFYWNoKChwcm9qZWN0LCBpKSA9PntcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBwcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgICAgICAgICAgdGFza0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgIGNvbnRlbnRIZWFkZXIudGV4dENvbnRlbnQgPSBgJHtteVByb2plY3RzW2ldLnRpdGxlfWA7XG4gICAgICAgICAgICBkaXNwbGF5VGFza3MoaSlcbiAgICAgICAgICAgIGNyZWF0ZVRhc2soaSlcbiAgICAgICAgICAgIHRhc2tCdXR0b24oKVxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc29sZS5sb2cobXlQcm9qZWN0cylcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGkpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICB9KVxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICB9KVxufVxuXG5mdW5jdGlvbiBkaXNwbGF5VGFza3MgKGkpe1xuXG4gICAgXG4gICAgY29uc3QgdGFza0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrQ29udGFpbmVyJyk7XG4gICAgdGFza0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcblxuICAgIGxldCB0YXNrQXJyYXkgPSBteVByb2plY3RzLmF0KGkpLnRhc2tzO1xuICAgIFxuICAgIHRhc2tBcnJheS5mb3JFYWNoKChlLCBpKSA9PntcbiAgICAgICAgbGV0IHRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGFzay5jbGFzc0xpc3QuYWRkKCd0YXNrJylcblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2spXG5cbiAgICAgICAgbGV0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKCd0YXNrVGl0bGUnKTtcbiAgICAgICAgdGFza1RpdGxlLnZhbHVlID0gZS50aXRsZTtcbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrVGl0bGUpO1xuXG4gICAgICAgIGxldCB0YXNrRGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICB0YXNrRGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZCgndGFza0Rlc2NyaXB0aW9uJylcbiAgICAgICAgdGFza0Rlc2NyaXB0aW9uLnZhbHVlID0gZS5kZXNjcmlwdGlvbjtcbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrRGVzY3JpcHRpb24pO1xuXG4gICAgICAgIGxldCB0YXNrUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTtcbiAgICAgICAgdGFza1ByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3Rhc2tQcmlvcml0eScpXG4gICAgICAgIHRhc2tQcmlvcml0eS50ZXh0Q29udGVudCA9IGUucHJpb3JpdHk7XG4gICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza1ByaW9yaXR5KTtcblxuICAgICAgICBsZXQgbG93UHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgbG93UHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgnbG93UHJpb3JpdHknKTtcbiAgICAgICAgbG93UHJpb3JpdHkudmFsdWUgPSAnTG93IFByaW9yaXR5JztcbiAgICAgICAgbG93UHJpb3JpdHkudGV4dENvbnRlbnQgPSAnTG93IFByaW9yaXR5J1xuICAgICAgICB0YXNrUHJpb3JpdHkuYXBwZW5kQ2hpbGQobG93UHJpb3JpdHkpO1xuXG4gICAgICAgIFxuXG4gICAgICAgIGxldCBoaWdoUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgaGlnaFByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ2hpZ2hQcmlvcml0eScpO1xuICAgICAgICBoaWdoUHJpb3JpdHkudmFsdWUgPSAnSGlnaCBQcmlvcml0eSc7XG4gICAgICAgIGhpZ2hQcmlvcml0eS50ZXh0Q29udGVudCA9ICdIaWdoIFByaW9yaXR5J1xuICAgICAgICB0YXNrUHJpb3JpdHkuYXBwZW5kQ2hpbGQoaGlnaFByaW9yaXR5KTtcblxuICAgICAgICBcblxuICAgICAgICBsZXQgdGFza0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXG4gICAgICAgIHRhc2tEdWVEYXRlLmNsYXNzTGlzdC5hZGQoJ3Nob3dEdWVEYXRlJyk7XG4gICAgICAgIHRhc2tEdWVEYXRlLnR5cGUgPSAnRGF0ZSc7XG4gICAgICAgIHRhc2tEdWVEYXRlLnZhbHVlID0gZS5kdWVEYXRlO1xuICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlKTtcblxuICAgICAgICBsZXQgdGFza0VkaXRBbmRTdWJtaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgdGFza0VkaXRBbmRTdWJtaXQuY2xhc3NMaXN0LmFkZCgndGFza0VkaXRBbmRTdWJtaXQnKTtcbiAgICAgICAgdGFza0VkaXRBbmRTdWJtaXQudGV4dENvbnRlbnQgPSAnU3VibWl0JztcbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrRWRpdEFuZFN1Ym1pdCk7XG5cbiAgICAgICAgdGFza0VkaXRBbmRTdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICAgICAgZS50aXRsZSA9IHRhc2tUaXRsZS52YWx1ZTtcbiAgICAgICAgICAgIGUuZGVzY3JpcHRpb24gPSB0YXNrRGVzY3JpcHRpb24udmFsdWU7XG4gICAgICAgICAgICBlLnByaW9yaXR5ID0gdGFza1ByaW9yaXR5LnZhbHVlO1xuICAgICAgICAgICAgZS5kdWVEYXRlID0gdGFza0R1ZURhdGUudmFsdWU7XG5cbiAgICAgICAgICAgIGlmIChlLnByaW9yaXR5ID09ICdIaWdoIFByaW9yaXR5Jyl7XG4gICAgICAgICAgICAgICAgdGFzay5zdHlsZS5ib3JkZXJDb2xvciA9ICdyZWQnXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGUucHJpb3JpdHkgPT0gJ0xvdyBQcmlvcml0eScpe1xuICAgICAgICAgICAgICAgIHRhc2suc3R5bGUuYm9yZGVyQ29sb3IgPSAnZ3JlZW4nXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRhc2suc3R5bGUuYm9yZGVyQ29sb3IgPSAnYmxhY2snXG4gICAgICAgICAgICB9XG4gICAgXG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRhc2tBcnJheSlcblxuXG4gICAgICAgIH0pXG4gICAgICAgIFxuXG4gICAgICAgIGlmIChlLnByaW9yaXR5ID09ICdIaWdoIFByaW9yaXR5Jyl7XG4gICAgICAgICAgICB0YXNrLnN0eWxlLmJvcmRlckNvbG9yID0gJ3JlZCdcbiAgICAgICAgfSBlbHNlIGlmIChlLnByaW9yaXR5ID09ICdMb3cgUHJpb3JpdHknKXtcbiAgICAgICAgICAgIHRhc2suc3R5bGUuYm9yZGVyQ29sb3IgPSAnZ3JlZW4nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0YXNrLnN0eWxlLmJvcmRlckNvbG9yID0gJ2JsYWNrJ1xuICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG4gICAgICAgIGxldCB0YXNrRGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICAgICAgdGFza0RlbGV0ZS5jbGFzc0xpc3QuYWRkKCd0YXNrRGVsZXRlJyk7XG4gICAgICAgIHRhc2tEZWxldGUudGV4dENvbnRlbnQgPSAnRGVsZXRlJztcbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrRGVsZXRlKTtcbiAgICAgICAgdGFza0RlbGV0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRhc2tBcnJheS5zcGxpY2UoaSAsIDEpO1xuICAgICAgICAgICAgdGFzay5yZW1vdmUoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGkpXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRhc2tBcnJheSlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgfSlcblxuXG5cblxuICAgIH0pXG5cbn1cblxuXG5cblxuZnVuY3Rpb24gY3JlYXRlVGFzayAoaSl7XG5cbiAgICBjb25zdCB0YXNrRm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrRm9ybUNvbnRhaW5lcicpO1xuICAgIHRhc2tGb3JtQ29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuXG4gICAgY29uc3QgdGFza0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrQ29udGFpbmVyJylcblxuICAgIFxuXG4gICAgXG5cbiAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHRhc2tUaXRsZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tUaXRsZScpXG4gICAgdGFza1RpdGxlLnBsYWNlaG9sZGVyID0gJ3RpdGxlJztcbiAgICB0YXNrRm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrVGl0bGUpO1xuXG4gICAgY29uc3QgdGFza0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrRGVzY3JpcHRpb24uc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrRGVzY3JpcHRpb24nKTtcbiAgICB0YXNrRGVzY3JpcHRpb24ucGxhY2Vob2xkZXIgPSAnZGVzY3JpcHRpb24nXG4gICAgdGFza0Zvcm1Db250YWluZXIuYXBwZW5kQ2hpbGQodGFza0Rlc2NyaXB0aW9uKTtcblxuICAgIGNvbnN0IHRhc2tQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICAgIHRhc2tQcmlvcml0eS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tQcmlvcml0eScpO1xuICAgIHRhc2tGb3JtQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tQcmlvcml0eSk7XG5cbiAgICBjb25zdCBoaWdoUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICBoaWdoUHJpb3JpdHkudmFsdWUgPSAnSGlnaCBQcmlvcml0eSdcbiAgICBoaWdoUHJpb3JpdHkudGV4dENvbnRlbnQgPSAnSGlnaCBQcmlvcml0eSdcbiAgICB0YXNrUHJpb3JpdHkuYXBwZW5kQ2hpbGQoaGlnaFByaW9yaXR5KTtcblxuICAgIGNvbnN0IGxvd1ByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgbG93UHJpb3JpdHkudmFsdWUgPSAnTG93IFByaW9yaXR5J1xuICAgIGxvd1ByaW9yaXR5LnRleHRDb250ZW50ID0gJ0xvdyBQcmlvcml0eSdcbiAgICB0YXNrUHJpb3JpdHkuYXBwZW5kQ2hpbGQobG93UHJpb3JpdHkpO1xuXG4gICAgY29uc3QgdGFza0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHRhc2tEdWVEYXRlLnNldEF0dHJpYnV0ZSgnaWQnLCAndGFza0R1ZURhdGUnKVxuICAgIHRhc2tEdWVEYXRlLnR5cGUgPSAnRGF0ZSc7XG4gICAgdGFza0R1ZURhdGUudGV4dENvbnRlbnQgPSAnRHVlIERhdGUnO1xuICAgIHRhc2tGb3JtQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlKTtcblxuICAgIGNvbnN0IHN1Ym1pdFRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBzdWJtaXRUYXNrLnNldEF0dHJpYnV0ZSgnaWQnLCAnc3VibWl0VGFzaycpO1xuICAgIHN1Ym1pdFRhc2sudGV4dENvbnRlbnQgPSAnU3VibWl0J1xuICAgIHRhc2tGb3JtQ29udGFpbmVyLmFwcGVuZENoaWxkKHN1Ym1pdFRhc2spO1xuXG4gICAgY29uc3QgY2FuY2VsVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNhbmNlbFRhc2suc2V0QXR0cmlidXRlKCdpZCcsICdjYW5jZWxUYXNrJyk7XG4gICAgY2FuY2VsVGFzay50ZXh0Q29udGVudCA9ICdDYW5jZWwnXG4gICAgdGFza0Zvcm1Db250YWluZXIuYXBwZW5kQ2hpbGQoY2FuY2VsVGFzayk7XG5cbiAgICBcblxuICAgIHN1Ym1pdFRhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICBcblxuICAgICAgICBcblxuICAgICAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza1RpdGxlJykudmFsdWU7XG4gICAgICAgIGxldCBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrRGVzY3JpcHRpb24nKS52YWx1ZTtcbiAgICAgICAgbGV0IHByaW9yaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tQcmlvcml0eScpLnZhbHVlO1xuICAgICAgICBsZXQgZHVlRGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrRHVlRGF0ZScpLnZhbHVlO1xuXG4gICAgICAgIFxuXG4gICAgICAgIGxldCB0YXNrT2JqID0gbmV3IFRhc2sgKHRpdGxlLCBkZXNjcmlwdGlvbiwgcHJpb3JpdHksIGR1ZURhdGUpXG4gICAgICAgIG15UHJvamVjdHMuYXQoaSkudGFza3MucHVzaCh0YXNrT2JqKTtcblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKG15UHJvamVjdHMpXG4gICAgICAgIGNvbnNvbGUubG9nKHByaW9yaXR5KVxuXG4gICAgICAgIGRpc3BsYXlUYXNrcyhpKVxuXG4gICAgICAgIFxuXG4gICAgICAgIGxldCB0YXNrRm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrRm9ybUNvbnRhaW5lcicpO1xuICAgICAgICB0YXNrRm9ybUNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgICAgIFxuICAgICAgICBcblxuICAgIH0pXG5cbiAgICAgICAgXG5cbn1cblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFsbFRhc2tzJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50SGVhZGVyJykudGV4dENvbnRlbnQgPSAnQWxsJ1xuICAgIGNvbnN0IHRhc2tDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza0NvbnRhaW5lcicpO1xuICAgIHRhc2tDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgbXlQcm9qZWN0cy5mb3JFYWNoKChlLGkpPT57XG4gICAgICAgIGxldCB0YXNrQXJyYXkgPSBlLnRhc2tzXG4gICAgICAgIHRhc2tBcnJheS5mb3JFYWNoKChlLGkpPT57XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICBsZXQgdGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgdGFzay5jbGFzc0xpc3QuYWRkKCd0YXNrJylcbiAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQodGFzaylcbiAgICBcbiAgICAgICAgICAgIGxldCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgdGFza1RpdGxlLmNsYXNzTGlzdC5hZGQoJ3Rhc2tUaXRsZScpO1xuICAgICAgICAgICAgdGFza1RpdGxlLnZhbHVlID0gZS50aXRsZTtcbiAgICAgICAgICAgIHRhc2suYXBwZW5kQ2hpbGQodGFza1RpdGxlKTtcbiAgICBcbiAgICAgICAgICAgIGxldCB0YXNrRGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgdGFza0Rlc2NyaXB0aW9uLmNsYXNzTGlzdC5hZGQoJ3Rhc2tEZXNjcmlwdGlvbicpXG4gICAgICAgICAgICB0YXNrRGVzY3JpcHRpb24udmFsdWUgPSBlLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrRGVzY3JpcHRpb24pO1xuICAgIFxuICAgICAgICAgICAgbGV0IHRhc2tQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICAgICAgICAgICAgdGFza1ByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3Rhc2tQcmlvcml0eScpXG4gICAgICAgICAgICB0YXNrUHJpb3JpdHkudGV4dENvbnRlbnQgPSBlLnByaW9yaXR5O1xuICAgICAgICAgICAgdGFzay5hcHBlbmRDaGlsZCh0YXNrUHJpb3JpdHkpO1xuICAgIFxuICAgICAgICAgICAgbGV0IGxvd1ByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICAgICAgICBsb3dQcmlvcml0eS5jbGFzc0xpc3QuYWRkKCdsb3dQcmlvcml0eScpO1xuICAgICAgICAgICAgbG93UHJpb3JpdHkudmFsdWUgPSAnTG93IFByaW9yaXR5JztcbiAgICAgICAgICAgIGxvd1ByaW9yaXR5LnRleHRDb250ZW50ID0gJ0xvdyBQcmlvcml0eSdcbiAgICAgICAgICAgIHRhc2tQcmlvcml0eS5hcHBlbmRDaGlsZChsb3dQcmlvcml0eSk7XG4gICAgXG4gICAgICAgICAgICBcbiAgICBcbiAgICAgICAgICAgIGxldCBoaWdoUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgICAgIGhpZ2hQcmlvcml0eS5jbGFzc0xpc3QuYWRkKCdoaWdoUHJpb3JpdHknKTtcbiAgICAgICAgICAgIGhpZ2hQcmlvcml0eS52YWx1ZSA9ICdIaWdoIFByaW9yaXR5JztcbiAgICAgICAgICAgIGhpZ2hQcmlvcml0eS50ZXh0Q29udGVudCA9ICdIaWdoIFByaW9yaXR5J1xuICAgICAgICAgICAgdGFza1ByaW9yaXR5LmFwcGVuZENoaWxkKGhpZ2hQcmlvcml0eSk7XG4gICAgXG4gICAgICAgICAgICBcbiAgICBcbiAgICAgICAgICAgIGxldCB0YXNrRHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JylcbiAgICAgICAgICAgIHRhc2tEdWVEYXRlLmNsYXNzTGlzdC5hZGQoJ3Nob3dEdWVEYXRlJyk7XG4gICAgICAgICAgICB0YXNrRHVlRGF0ZS50eXBlID0gJ0RhdGUnO1xuICAgICAgICAgICAgdGFza0R1ZURhdGUudmFsdWUgPSBlLmR1ZURhdGU7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlKTtcbiAgICBcbiAgICAgICAgICAgIGxldCB0YXNrRWRpdEFuZFN1Ym1pdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICAgICAgdGFza0VkaXRBbmRTdWJtaXQuY2xhc3NMaXN0LmFkZCgndGFza0VkaXRBbmRTdWJtaXQnKTtcbiAgICAgICAgICAgIHRhc2tFZGl0QW5kU3VibWl0LnRleHRDb250ZW50ID0gJ1N1Ym1pdCc7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tFZGl0QW5kU3VibWl0KTtcbiAgICBcbiAgICAgICAgICAgIHRhc2tFZGl0QW5kU3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgICAgICAgICAgICBlLnRpdGxlID0gdGFza1RpdGxlLnZhbHVlO1xuICAgICAgICAgICAgICAgIGUuZGVzY3JpcHRpb24gPSB0YXNrRGVzY3JpcHRpb24udmFsdWU7XG4gICAgICAgICAgICAgICAgZS5wcmlvcml0eSA9IHRhc2tQcmlvcml0eS52YWx1ZTtcbiAgICAgICAgICAgICAgICBlLmR1ZURhdGUgPSB0YXNrRHVlRGF0ZS52YWx1ZTtcbiAgICBcbiAgICAgICAgICAgICAgICBpZiAoZS5wcmlvcml0eSA9PSAnSGlnaCBQcmlvcml0eScpe1xuICAgICAgICAgICAgICAgICAgICB0YXNrLnN0eWxlLmJvcmRlckNvbG9yID0gJ3JlZCdcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGUucHJpb3JpdHkgPT0gJ0xvdyBQcmlvcml0eScpe1xuICAgICAgICAgICAgICAgICAgICB0YXNrLnN0eWxlLmJvcmRlckNvbG9yID0gJ2dyZWVuJ1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRhc2suc3R5bGUuYm9yZGVyQ29sb3IgPSAnYmxhY2snXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICBcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0YXNrQXJyYXkpXG4gICAgXG4gICAgXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgXG4gICAgXG4gICAgICAgICAgICBpZiAoZS5wcmlvcml0eSA9PSAnSGlnaCBQcmlvcml0eScpe1xuICAgICAgICAgICAgICAgIHRhc2suc3R5bGUuYm9yZGVyQ29sb3IgPSAncmVkJ1xuICAgICAgICAgICAgfSBlbHNlIGlmIChlLnByaW9yaXR5ID09ICdMb3cgUHJpb3JpdHknKXtcbiAgICAgICAgICAgICAgICB0YXNrLnN0eWxlLmJvcmRlckNvbG9yID0gJ2dyZWVuJ1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXNrLnN0eWxlLmJvcmRlckNvbG9yID0gJ2JsYWNrJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICAgICAgbGV0IHRhc2tEZWxldGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuICAgICAgICAgICAgdGFza0RlbGV0ZS5jbGFzc0xpc3QuYWRkKCd0YXNrRGVsZXRlJyk7XG4gICAgICAgICAgICB0YXNrRGVsZXRlLnRleHRDb250ZW50ID0gJ0RlbGV0ZSc7XG4gICAgICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEZWxldGUpO1xuICAgICAgICAgICAgdGFza0RlbGV0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdGFza0FycmF5LnNwbGljZShpICwgMSk7XG4gICAgICAgICAgICAgICAgdGFzay5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhpKVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRhc2tBcnJheSlcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICBcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIFxuICAgICAgICB9KVxuICAgIH0pXG59KVxuXG4gICAgXG5cbiAgICAgICAgXG5cbiAgICAgICAgXG5cbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG5cblxuICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cbiJdLCJuYW1lcyI6WyJteVByb2plY3RzIiwiUHJvamVjdCIsImNvbnN0cnVjdG9yIiwidGl0bGUiLCJpbmRleCIsInRhc2tzIiwidGhpcyIsIlRhc2siLCJkZXNjcmlwdGlvbiIsInByaW9yaXR5IiwiZHVlRGF0ZSIsInByb2plY3RDbGljayIsInByb2plY3RDb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50SGVhZGVyIiwidGFza0NvbnRhaW5lciIsIkFycmF5IiwiZnJvbSIsImNoaWxkcmVuIiwiZm9yRWFjaCIsInByb2plY3QiLCJpIiwiYWRkRXZlbnRMaXN0ZW5lciIsImlubmVySFRNTCIsInRleHRDb250ZW50IiwiZGlzcGxheVRhc2tzIiwidGFza0Zvcm1Db250YWluZXIiLCJ0YXNrVGl0bGUiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwicGxhY2Vob2xkZXIiLCJhcHBlbmRDaGlsZCIsInRhc2tEZXNjcmlwdGlvbiIsInRhc2tQcmlvcml0eSIsImhpZ2hQcmlvcml0eSIsInZhbHVlIiwibG93UHJpb3JpdHkiLCJ0YXNrRHVlRGF0ZSIsInR5cGUiLCJzdWJtaXRUYXNrIiwiY2FuY2VsVGFzayIsImdldEVsZW1lbnRCeUlkIiwidGFza09iaiIsImF0IiwicHVzaCIsImNvbnNvbGUiLCJsb2ciLCJzdHlsZSIsInZpc2liaWxpdHkiLCJjcmVhdGVUYXNrIiwidGFza0J1dHRvbiIsInRhc2tBcnJheSIsImUiLCJ0YXNrIiwiY2xhc3NMaXN0IiwiYWRkIiwidGFza0VkaXRBbmRTdWJtaXQiLCJib3JkZXJDb2xvciIsInRhc2tEZWxldGUiLCJzcGxpY2UiLCJyZW1vdmUiLCJhZGRQcm9qZWN0IiwiZGVmYXVsdFByb2plY3QiLCJwcm9qZWN0Rm9ybUNvbnRhaW5lciIsInN1Ym1pdCIsInByb2plY3ROYW1lIiwicHJvamVjdE9iaiJdLCJzb3VyY2VSb290IjoiIn0=