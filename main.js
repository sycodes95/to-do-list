(()=>{let t=[];class e{constructor(t,e,n){this.title=t,this.index=e,this.tasks=[]}}class n{constructor(t,e,n,o){this.title=t,this.description=e,this.priority=n,this.dueDate=o}}function o(e){const n=document.querySelector(".taskContainer");n.innerHTML="",t.at(e).tasks.forEach((t=>{let e=document.createElement("div");e.classList.add("task"),n.appendChild(e);let o=document.createElement("div");o.classList.add("taskTitle"),o.textContent=t.title,e.appendChild(o);let i=document.createElement("div");i.classList.add("taskDescription"),i.textContent=t.description,e.appendChild(i)}))}!function(){const t=document.querySelector(".projectFormContainer");document.querySelector(".projectButton").addEventListener("click",(()=>{t.style.visibility="visible"}))}(),function(){const i=document.getElementById("submitProject"),c=document.querySelector(".projectContainer");i.addEventListener("click",(()=>{const i=document.getElementById("projectName"),s=document.createElement("div");c.appendChild(s),s.textContent=i.value;let l=s.textContent,r=new e(l);t.push(r),console.log(t),function(){const e=document.querySelector(".projectContainer");let i=document.querySelector(".contentHeader");const c=document.querySelector(".taskContainer");Array.from(e.children).forEach(((e,s)=>{e.addEventListener("click",(()=>{c.innerHTML="",i.textContent=`${t[s].title}`,o(s),function(e){const i=document.querySelector(".taskFormContainer");i.innerHTML="",document.querySelector(".taskContainer");const c=document.createElement("input");c.setAttribute("id","taskTitle"),c.placeholder="title",i.appendChild(c);const s=document.createElement("input");s.setAttribute("id","taskDescription"),s.placeholder="description",i.appendChild(s);const l=document.createElement("select");l.setAttribute("id","taskPriority"),i.appendChild(l);const r=document.createElement("option");r.value="High Priority",r.textContent="High Priority",l.appendChild(r);const d=document.createElement("option");d.value="Low Priority",d.textContent="Low Priority",l.appendChild(d);const a=document.createElement("button");a.setAttribute("id","submitTask"),a.textContent="Submit",i.appendChild(a);const u=document.createElement("button");u.setAttribute("id","cancelTask"),u.textContent="Cancel",i.appendChild(u),a.addEventListener("click",(()=>{let i=document.getElementById("taskTitle").value,c=document.getElementById("taskDescription").value,s=document.getElementById("taskPriority").value,l=new n(i,c,s);t.at(e).tasks.push(l),console.log(t),o(e)}))}(s),console.log(t),console.log(s)})),function(){const t=document.getElementById("taskButton");t.style.visibility="visible";const e=document.querySelector(".taskFormContainer");t.addEventListener("click",(()=>{e.style.visibility="visible"}))}()}))}()}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,