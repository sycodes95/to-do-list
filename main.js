(()=>{let t=[];class e{constructor(t,e,n){this.title=t,this.index=e,this.tasks=[]}}class n{constructor(t,e,n,o){this.title=t,this.description=e,this.priority=n,this.dueDate=o}}function o(e){const n=document.querySelector(".taskContainer");n.innerHTML="";let o=t.at(e).tasks;o.forEach(((t,e)=>{let i=document.createElement("div");i.classList.add("task"),n.appendChild(i);let c=document.createElement("div");c.classList.add("taskTitle"),c.textContent=t.title,i.appendChild(c);let l=document.createElement("div");l.classList.add("taskDescription"),l.textContent=t.description,i.appendChild(l);let d=document.createElement("div");d.classList.add("taskPriority"),d.textContent=t.priority,i.appendChild(d);let s=document.createElement("div");s.classList.add("showDueDate"),s.textContent=t.dueDate,i.appendChild(s);let a=document.createElement("button");a.classList.add("showDetailsAndEdit"),a.textContent="Details / Edit",i.appendChild(a);let r=document.createElement("button");r.classList.add("taskDelete"),r.textContent="Delete",i.appendChild(r),r.addEventListener("click",(()=>{o.splice(e,1),i.remove(),console.log(e),console.log(t),console.log(o)}))}))}!function(){const t=document.querySelector(".projectFormContainer");document.querySelector(".projectButton").addEventListener("click",(()=>{t.style.visibility="visible"}))}(),function(){const i=document.getElementById("submitProject"),c=document.querySelector(".projectContainer");i.addEventListener("click",(()=>{const i=document.getElementById("projectName"),l=document.createElement("div");c.appendChild(l),l.textContent=i.value;let d=l.textContent,s=new e(d);t.push(s),console.log(t),function(){const e=document.querySelector(".projectContainer");let i=document.querySelector(".contentHeader");const c=document.querySelector(".taskContainer");Array.from(e.children).forEach(((e,l)=>{e.addEventListener("click",(()=>{c.innerHTML="",i.textContent=`${t[l].title}`,o(l),function(e){const i=document.querySelector(".taskFormContainer");i.innerHTML="",document.querySelector(".taskContainer");const c=document.createElement("input");c.setAttribute("id","taskTitle"),c.placeholder="title",i.appendChild(c);const l=document.createElement("input");l.setAttribute("id","taskDescription"),l.placeholder="description",i.appendChild(l);const d=document.createElement("select");d.setAttribute("id","taskPriority"),i.appendChild(d);const s=document.createElement("option");s.value="High Priority",s.textContent="High Priority",d.appendChild(s);const a=document.createElement("option");a.value="Low Priority",a.textContent="Low Priority",d.appendChild(a);const r=document.createElement("input");r.setAttribute("id","taskDueDate"),r.type="Date",r.textContent="Due Date",i.appendChild(r);const u=document.createElement("button");u.setAttribute("id","submitTask"),u.textContent="Submit",i.appendChild(u);const m=document.createElement("button");m.setAttribute("id","cancelTask"),m.textContent="Cancel",i.appendChild(m),u.addEventListener("click",(()=>{let i=document.getElementById("taskTitle").value,c=document.getElementById("taskDescription").value,l=document.getElementById("taskPriority").value,d=document.getElementById("taskDueDate").value,s=new n(i,c,l,d);t.at(e).tasks.push(s),console.log(t),console.log(l),o(e),document.querySelector(".taskFormContainer").style.visibility="hidden"}))}(l),function(){const t=document.getElementById("taskButton");t.style.visibility="visible";const e=document.querySelector(".taskFormContainer");t.addEventListener("click",(()=>{e.style.visibility="visible",document.getElementById("taskTitle").value="",document.getElementById("taskDescription").value="",document.getElementById("taskPriority").value="",document.getElementById("taskDueDate").value=""}))}(),console.log(t),console.log(l)}))}))}(),document.querySelector(".projectFormContainer").style.visibility="hidden"}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,