(()=>{let t=[];!function(){const t=document.querySelector(".projectFormContainer");document.querySelector(".projectButton").addEventListener("click",(()=>{t.style.visibility="visible"}))}(),function(){const o=document.getElementById("submitProject"),c=document.querySelector(".projectContainer");o.addEventListener("click",(()=>{const o=document.getElementById("projectName"),i=document.createElement("div");c.appendChild(i),i.textContent=o.value;let l=i.textContent,s=new e(l);t.push(s),console.log(t),function(){const e=document.querySelector(".projectContainer");let o=document.querySelector(".contentHeader");Array.from(e.children).forEach(((e,c)=>{e.addEventListener("click",(()=>{o.textContent=`${t[c].title}`,console.log(e),console.log(t)})),function(){const t=document.getElementById("taskButton"),e=document.querySelector(".taskFormContainer");t.addEventListener("click",(()=>{e.style.visibility="visible"}))}(),function(e){document.getElementById("submitTask").addEventListener("click",(()=>{let o=document.getElementById("taskTitle").value,c=document.getElementById("taskDescription").value,i=document.getElementById("taskPriority").value,l=new n(o,c,i);t.at(e).tasks=l,console.log(t)}))}(c)}))}()}))}();class e{constructor(t,e,n){this.title=t,this.index=e,this.tasks=[]}}class n{constructor(t,e,n,o){this.title=t,this.description=e,this.priority=n,this.dueDate=o}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiTUFBQSxJQUFJQSxFQUFhLElBRWpCLFdBQ0ksTUFBTUMsRUFBdUJDLFNBQVNDLGNBQWMseUJBQzlCRCxTQUFTQyxjQUFjLGtCQUUvQkMsaUJBQWlCLFNBQVMsS0FDcENILEVBQXFCSSxNQUFNQyxXQUFhLFNBQVMsR0FFeEQsQ0FQRCxHQVNBLFdBQ0ksTUFBTUMsRUFBU0wsU0FBU00sZUFBZSxpQkFDakNDLEVBQW1CUCxTQUFTQyxjQUFjLHFCQUNoREksRUFBT0gsaUJBQWlCLFNBQVMsS0FDN0IsTUFBTU0sRUFBY1IsU0FBU00sZUFBZSxlQUN0Q0csRUFBYVQsU0FBU1UsY0FBYyxPQUMxQ0gsRUFBaUJJLFlBQVlGLEdBRTdCQSxFQUFXRyxZQUFjSixFQUFZSyxNQUVyQyxJQUFJQyxFQUFRTCxFQUFXRyxZQUVuQkcsRUFBYSxJQUFJQyxFQUFRRixHQUM3QmhCLEVBQVdtQixLQUFLRixHQUNoQkcsUUFBUUMsSUFBSXJCLEdBMENwQixXQUNJLE1BQU1TLEVBQW1CUCxTQUFTQyxjQUFjLHFCQUNoRCxJQUFJbUIsRUFBZ0JwQixTQUFTQyxjQUFjLGtCQUMzQ29CLE1BQU1DLEtBQUtmLEVBQWlCZ0IsVUFBVUMsU0FBUSxDQUFDQyxFQUFTQyxLQUVwREQsRUFBUXZCLGlCQUFpQixTQUFRLEtBQzdCa0IsRUFBY1IsWUFBYyxHQUFHZCxFQUFXNEIsR0FBR1osUUFDN0NJLFFBQVFDLElBQUlNLEdBQ1pQLFFBQVFDLElBQUlyQixFQUFVLElBNUNsQyxXQUNJLE1BQU02QixFQUFhM0IsU0FBU00sZUFBZSxjQUNyQ3NCLEVBQW9CNUIsU0FBU0MsY0FBYyxzQkFDakQwQixFQUFXekIsaUJBQWlCLFNBQVMsS0FDakMwQixFQUFrQnpCLE1BQU1DLFdBQWEsWUFJN0MsQ0F1Q1F1QixHQXJDUixTQUFxQkQsR0FDRTFCLFNBQVNNLGVBQWUsY0FHaENKLGlCQUFpQixTQUFTLEtBQ2pDLElBQUlZLEVBQVFkLFNBQVNNLGVBQWUsYUFBYU8sTUFDN0NnQixFQUFjN0IsU0FBU00sZUFBZSxtQkFBbUJPLE1BQ3pEaUIsRUFBVzlCLFNBQVNNLGVBQWUsZ0JBQWdCTyxNQUVuRGtCLEVBQVUsSUFBSUMsRUFBTWxCLEVBQU9lLEVBQWFDLEdBQzVDaEMsRUFBV21DLEdBQUdQLEdBQUdRLE1BQVFILEVBQ3pCYixRQUFRQyxJQUFJckIsRUFBVSxHQUk5QixDQXVCUXFDLENBQVdULEVBQUMsR0FFcEIsQ0F0RFFVLEVBQWEsR0FFcEIsQ0FsQkQsR0F3RUEsTUFBTXBCLEVBQ0ZxQixZQUFZdkIsRUFBT3dCLEVBQU9KLEdBQ3RCSyxLQUFLekIsTUFBUUEsRUFDYnlCLEtBQUtELE1BQVFBLEVBQ2JDLEtBQUtMLE1BQVEsRUFDakIsRUFJSixNQUFNRixFQUNGSyxZQUFZdkIsRUFBT2UsRUFBYUMsRUFBVVUsR0FDdENELEtBQUt6QixNQUFRQSxFQUNieUIsS0FBS1YsWUFBY0EsRUFDbkJVLEtBQUtULFNBQVdBLEVBQ2hCUyxLQUFLQyxRQUFVQSxDQUNuQixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgbXlQcm9qZWN0cyA9IFtdO1xuXG4oZnVuY3Rpb24gcHJvamVjdEJ1dHRvbiAoKXtcbiAgICBjb25zdCBwcm9qZWN0Rm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0Rm9ybUNvbnRhaW5lcicpO1xuICAgIGNvbnN0IHByb2plY3RCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdEJ1dHRvbicpO1xuICAgIFxuICAgIHByb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICBwcm9qZWN0Rm9ybUNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gJ3Zpc2libGUnO1xuICAgIH0pO1xufSkoKTtcblxuKGZ1bmN0aW9uIHByb2plY3RTdWJtaXQgKCl7XG4gICAgY29uc3Qgc3VibWl0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdFByb2plY3QnKTtcbiAgICBjb25zdCBwcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RDb250YWluZXInKTtcbiAgICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0TmFtZScpO1xuICAgICAgICBjb25zdCBhZGRQcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHByb2plY3RDb250YWluZXIuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdCk7XG5cbiAgICAgICAgYWRkUHJvamVjdC50ZXh0Q29udGVudCA9IHByb2plY3ROYW1lLnZhbHVlO1xuICAgICAgICBcbiAgICAgICAgbGV0IHRpdGxlID0gYWRkUHJvamVjdC50ZXh0Q29udGVudDtcblxuICAgICAgICBsZXQgcHJvamVjdE9iaiA9IG5ldyBQcm9qZWN0KHRpdGxlKVxuICAgICAgICBteVByb2plY3RzLnB1c2gocHJvamVjdE9iailcbiAgICAgICAgY29uc29sZS5sb2cobXlQcm9qZWN0cylcblxuICAgICAgICBwcm9qZWN0Q2xpY2soKVxuICAgIH0pO1xufSkoKTtcblxuZnVuY3Rpb24gdGFza0J1dHRvbiAoKXtcbiAgICBjb25zdCB0YXNrQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tCdXR0b24nKTtcbiAgICBjb25zdCB0YXNrRm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrRm9ybUNvbnRhaW5lcicpO1xuICAgIHRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+IHtcbiAgICAgICAgdGFza0Zvcm1Db250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJ1xuXG4gICAgfSlcblxufVxuXG5mdW5jdGlvbiBzdWJtaXRUYXNrIChpKXtcbiAgICBjb25zdCBzdWJtaXRUYXNrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdFRhc2snKTtcblxuICAgIFxuICAgIHN1Ym1pdFRhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza1RpdGxlJykudmFsdWU7XG4gICAgICAgIGxldCBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrRGVzY3JpcHRpb24nKS52YWx1ZTtcbiAgICAgICAgbGV0IHByaW9yaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tQcmlvcml0eScpLnZhbHVlXG5cbiAgICAgICAgbGV0IHRhc2tPYmogPSBuZXcgVGFzayAodGl0bGUsIGRlc2NyaXB0aW9uLCBwcmlvcml0eSlcbiAgICAgICAgbXlQcm9qZWN0cy5hdChpKS50YXNrcyA9IHRhc2tPYmo7XG4gICAgICAgIGNvbnNvbGUubG9nKG15UHJvamVjdHMpXG5cbiAgICAgICAgXG4gICAgfSlcbn1cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG5mdW5jdGlvbiBwcm9qZWN0Q2xpY2sgKCl7XG4gICAgY29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0Q29udGFpbmVyJyk7XG4gICAgbGV0IGNvbnRlbnRIZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudEhlYWRlcicpXG4gICAgQXJyYXkuZnJvbShwcm9qZWN0Q29udGFpbmVyLmNoaWxkcmVuKS5mb3JFYWNoKChwcm9qZWN0LCBpKSA9PntcbiAgICAgICAgXG4gICAgICAgIHByb2plY3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XG4gICAgICAgICAgICBjb250ZW50SGVhZGVyLnRleHRDb250ZW50ID0gYCR7bXlQcm9qZWN0c1tpXS50aXRsZX1gO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocHJvamVjdClcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG15UHJvamVjdHMpXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGFza0J1dHRvbigpXG4gICAgICAgIHN1Ym1pdFRhc2soaSlcbiAgICB9KVxufVxuXG5jbGFzcyBQcm9qZWN0IHtcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgaW5kZXgsIHRhc2tzKXtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlXG4gICAgICAgIHRoaXMuaW5kZXggPSBpbmRleFxuICAgICAgICB0aGlzLnRhc2tzID0gW11cbiAgICB9XG5cbn1cblxuY2xhc3MgVGFzayB7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBwcmlvcml0eSwgZHVlRGF0ZSl7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgfVxufVxuICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cbiJdLCJuYW1lcyI6WyJteVByb2plY3RzIiwicHJvamVjdEZvcm1Db250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwic3R5bGUiLCJ2aXNpYmlsaXR5Iiwic3VibWl0IiwiZ2V0RWxlbWVudEJ5SWQiLCJwcm9qZWN0Q29udGFpbmVyIiwicHJvamVjdE5hbWUiLCJhZGRQcm9qZWN0IiwiY3JlYXRlRWxlbWVudCIsImFwcGVuZENoaWxkIiwidGV4dENvbnRlbnQiLCJ2YWx1ZSIsInRpdGxlIiwicHJvamVjdE9iaiIsIlByb2plY3QiLCJwdXNoIiwiY29uc29sZSIsImxvZyIsImNvbnRlbnRIZWFkZXIiLCJBcnJheSIsImZyb20iLCJjaGlsZHJlbiIsImZvckVhY2giLCJwcm9qZWN0IiwiaSIsInRhc2tCdXR0b24iLCJ0YXNrRm9ybUNvbnRhaW5lciIsImRlc2NyaXB0aW9uIiwicHJpb3JpdHkiLCJ0YXNrT2JqIiwiVGFzayIsImF0IiwidGFza3MiLCJzdWJtaXRUYXNrIiwicHJvamVjdENsaWNrIiwiY29uc3RydWN0b3IiLCJpbmRleCIsInRoaXMiLCJkdWVEYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==